paths: 
  /api/users/:
    get:
      summary: Obtiene todos los usuarios con paginación
      tags: 
        - Users
      parameters:
        - name: limit
          in: query
          required: false
          description: Número máximo de usuarios por página (por defecto 5)
          schema:
            type: integer
            example: 5
        - name: numPage
          in: query
          required: false
          description: Número de la página a solicitar (por defecto 1)
          schema:
            type: integer
            example: 1
      responses:
        "200":
          description: Los usuarios fueron obtenidos correctamente de la base de datos
          content:
            application/json:
              schema: 
                type: array
                items:
                  $ref: '#components/schemas/User'
        "500":
          description: Error interno del servidor, usualmente generado por una query defectuosa o un fallo de la conexión con la base de datos.
  
  /api/users:
    post:
      summary: Crea un nuevo usuario
      tags: 
        - Users
      requestBody:
        required: true
        content: 
          application/json:
            schema:
              $ref: '#components/requestBodies/createUser'
      responses: 
        "201":
          description: El usuario fue creado exitosamente
  
  /api/users/{uid}:
    get: 
      summary: Obtiene un usuario a partir de su id
      tags: 
        - Users
      parameters: 
        - name: uid
          in: path
          required: true
          description: id del usuario que se desea solicitar
          schema:
            type: string
      responses:
        "200":
          description: Usuario encontrado correctamente
          content: 
            application/json:
              schema:
                $ref: '#components/schemas/User'
        "404":
          description: Usuario no encontrado
        "500":
          description: Error interno del servidor

    put:
      summary: Actualiza un usuario por su id
      tags:
        - Users
      parameters: 
        - name: uid
          in: path
          required: true
          description: id del usuario que se desea actualizar
          schema:
            type: string
      requestBody:
        required: true
        content: 
          application/json:
            schema:
              $ref: '#components/requestBodies/updateUser'
      responses: 
        "200":
          description: El usuario fue actualizado exitosamente
        "404":
          description: Usuario no encontrado
        "500":
          description: Error interno del servidor

    delete:
      summary: Elimina un usuario por su id
      tags: 
        - Users
      parameters: 
        - name: uid
          in: path
          required: true
          description: id del usuario que se desea eliminar
          schema:
            type: string
      responses: 
        "200":
          description: El usuario fue eliminado exitosamente
        "404":
          description: Usuario no encontrado
        "500":
          description: Error interno del servidor

components:
  schemas:  
    User:
      type: object
      properties:
        _id:
          type: string
          description: Id autogenerado de Mongo
        first_name:
          type: string
          description: Nombre del usuario
        last_name:
          type: string
          description: Apellido del usuario
        email:
          type: string
          description: Email del usuario
        username:
          type: string
          description: Nombre de usuario único
        password:
          type: string
          description: Contraseña del usuario
      example:
        _id: ObjectId('alksfdasdflajasjdflasdfas')
        first_name: José
        last_name: Martínez Terán
        email: josemmtw99@gmail.com
        username: josemmtw99
        password: fasdf$as.asdf$asf&afdsf./asfdkjhasdf
  
  requestBodies:
    createUser:
      type: object
      properties:
        first_name:
          type: string
          description: Nombre del usuario
        last_name:
          type: string
          description: Apellido del usuario
        email:
          type: string
          description: Email del usuario, este debe ser único
        username:
          type: string
          description: Nombre de usuario único
        password:
          type: string
          description: Contraseña del usuario
      example:
        first_name: José
        last_name: Martínez Terán
        email: josemmtw99@gmail.com
        username: josemmtw99
        password: f123456
    
    updateUser:
      type: object
      properties:
        first_name:
          type: string
          description: Nombre del usuario (opcional)
        last_name:
          type: string
          description: Apellido del usuario (opcional)
        email:
          type: string
          description: Email del usuario (opcional)
        username:
          type: string
          description: Nombre de usuario único (opcional)
        password:
          type: string
          description: Contraseña del usuario (opcional)
      example:
        first_name: José
        last_name: Martínez Terán
        email: josemmtw99@gmail.com
        username: josemmtw99
        password: nuevoPassword123